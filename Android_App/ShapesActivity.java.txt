package com.example.oscar.csc306courseworkapplication;

import android.app.Activity;
import android.content.Context;
import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.Path;
import android.graphics.Rect;
import android.graphics.drawable.BitmapDrawable;
import android.os.Bundle;
import android.view.MotionEvent;
import android.view.View;
import android.view.ViewGroup;
import android.view.WindowManager;
import android.widget.ArrayAdapter;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.PopupWindow;
import android.widget.RelativeLayout;
import android.widget.TextView;


import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

public class ShapesActivity extends Activity {


    String popUpContents[];
    String popUpContents2[]; //color
    PopupWindow popupWindowShapes;
    PopupWindow popupWindowColor; //color
    Button buttonShowDropDown;
    Button buttonShowDropDown2; //color
    Button clearButton;

    String viewType;
    String shapeColor;
    private ArrayList<View> list;
    private View v;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        list = new ArrayList<View>();

        setContentView(R.layout.activity_shapes);

        List<String> shapeList = new ArrayList<String>();
        shapeList.add("Square::1");
        shapeList.add("Rectangle::2");
        shapeList.add("Triangle::3");
        shapeList.add("Diamond::4");
        shapeList.add("Cirlce::5");
        shapeList.add("Kite::6");

        List<String> colorList = new ArrayList<String>();
        colorList.add("Red::7");
        colorList.add("Blue::8");
        colorList.add("Green::9");
        colorList.add("Yellow::10");
        colorList.add("Black::11");
        colorList.add("Cyan::12");

        popUpContents = new String[shapeList.size()];
        shapeList.toArray(popUpContents);

        popUpContents2 = new String[colorList.size()]; //color
        colorList.toArray(popUpContents2);

        popupWindowShapes = popupWindowShapes();
        popupWindowColor = popupWindowColor(); //color

        View.OnClickListener handler = new View.OnClickListener() {
            public void onClick(View v) {
                switch (v.getId()) {
                    case R.id.shapebutton1:
                        popupWindowShapes.showAsDropDown(v, -5, 0);
                        break;
                }
            }
        };

        View.OnClickListener handler2 = new View.OnClickListener() { //color
            public void onClick(View v) {
                switch (v.getId()) {
                    case R.id.shapebutton3:
                        popupWindowColor.showAsDropDown(v, -5, 0);
                        break;
                }
            }
        };

        View.OnClickListener clearHandler = new View.OnClickListener() { //color
            public void onClick(View v) {
               clearShapes();
            }
        };

        buttonShowDropDown = (Button) findViewById(R.id.shapebutton1);
        buttonShowDropDown.setOnClickListener(handler);

        buttonShowDropDown2 = (Button) findViewById(R.id.shapebutton3);
        buttonShowDropDown2.setOnClickListener(handler2);

        clearButton = (Button) findViewById(R.id.shapebutton2);
        clearButton.setOnClickListener(clearHandler);

        shapeColor = "0";
        viewType = "0";

        RelativeLayout rl = (RelativeLayout) findViewById(R.id.mainLayout);
        rl.setOnTouchListener(new View.OnTouchListener() {
            @Override
            public boolean onTouch(View v, MotionEvent event) {
                if (event.getAction() == MotionEvent.ACTION_UP) {

                    if (viewType.equals("1")) {

                        RelativeLayout rl = (RelativeLayout) findViewById(R.id.mainLayout);

                        ShapesActivity.SquareView squareView = new SquareView(ShapesActivity.this);
                        squareView.setBackgroundColor(Color.TRANSPARENT);
                        list.add(squareView);

                        if (shapeColor.equals("7")){
                            squareView.paint.setColor(Color.RED);
                        } else if (shapeColor.equals("8")){
                            squareView.paint.setColor(Color.BLUE);
                        } else if (shapeColor.equals("9")){
                            squareView.paint.setColor(Color.GREEN);
                        } else if (shapeColor.equals("10")){
                            squareView.paint.setColor(Color.YELLOW);
                        } else if (shapeColor.equals("11")){
                            squareView.paint.setColor(Color.BLACK);
                        } else if (shapeColor.equals("12")){
                            squareView.paint.setColor(Color.CYAN);
                        }


                        RelativeLayout.LayoutParams params = new RelativeLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);
                        params.addRule(RelativeLayout.ALIGN_PARENT_LEFT, RelativeLayout.TRUE);
                        params.topMargin = (int) event.getY();
                        params.leftMargin = (int) event.getX();
                        rl.addView(squareView, params);

                        squareView.invalidate();

                    } else if (viewType.equals("2")) {

                        RelativeLayout rl = (RelativeLayout) findViewById(R.id.mainLayout);

                        ShapesActivity.RectangleView rectangleView = new RectangleView(ShapesActivity.this);
                        rectangleView.setBackgroundColor(Color.TRANSPARENT);
                        list.add(rectangleView);

                        if (shapeColor.equals("7")){
                            rectangleView.paint.setColor(Color.RED);
                        } else if (shapeColor.equals("8")){
                            rectangleView.paint.setColor(Color.BLUE);
                        } else if (shapeColor.equals("9")){
                            rectangleView.paint.setColor(Color.GREEN);
                        } else if (shapeColor.equals("10")){
                            rectangleView.paint.setColor(Color.YELLOW);
                        } else if (shapeColor.equals("11")){
                            rectangleView.paint.setColor(Color.BLACK);
                        } else if (shapeColor.equals("12")){
                            rectangleView.paint.setColor(Color.CYAN);
                        }


                        RelativeLayout.LayoutParams params = new RelativeLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);
                        params.addRule(RelativeLayout.ALIGN_PARENT_LEFT, RelativeLayout.TRUE);
                        params.topMargin = (int) event.getY();
                        params.leftMargin = (int) event.getX();
                        rl.addView(rectangleView, params);

                        rectangleView.invalidate();

                    } else if (viewType.equals("3")) {

                        RelativeLayout rl = (RelativeLayout) findViewById(R.id.mainLayout);

                        ShapesActivity.TriangleView triangleView = new TriangleView(ShapesActivity.this);
                        triangleView.setBackgroundColor(Color.TRANSPARENT);
                        list.add(triangleView);

                        if (shapeColor.equals("7")){
                            triangleView.paint.setColor(Color.RED);
                        } else if (shapeColor.equals("8")){
                            triangleView.paint.setColor(Color.BLUE);
                        } else if (shapeColor.equals("9")){
                            triangleView.paint.setColor(Color.GREEN);
                        } else if (shapeColor.equals("10")){
                            triangleView.paint.setColor(Color.YELLOW);
                        } else if (shapeColor.equals("11")){
                            triangleView.paint.setColor(Color.BLACK);
                        } else if (shapeColor.equals("12")){
                            triangleView.paint.setColor(Color.CYAN);
                        }

                        RelativeLayout.LayoutParams params = new RelativeLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);
                        params.addRule(RelativeLayout.ALIGN_PARENT_LEFT, RelativeLayout.TRUE);
                        params.topMargin = (int) event.getY();
                        params.leftMargin = (int) event.getX();
                        rl.addView(triangleView, params);

                        triangleView.invalidate();

                    } else if (viewType.equals("4")) {

                        RelativeLayout rl = (RelativeLayout) findViewById(R.id.mainLayout);

                        ShapesActivity.DiamondView diamondView = new DiamondView(ShapesActivity.this);
                        diamondView.setBackgroundColor(Color.TRANSPARENT);
                        list.add(diamondView);

                        if (shapeColor.equals("7")){
                            diamondView.paint.setColor(Color.RED);
                        } else if (shapeColor.equals("8")){
                            diamondView.paint.setColor(Color.BLUE);
                        } else if (shapeColor.equals("9")){
                            diamondView.paint.setColor(Color.GREEN);
                        } else if (shapeColor.equals("10")){
                            diamondView.paint.setColor(Color.YELLOW);
                        } else if (shapeColor.equals("11")){
                            diamondView.paint.setColor(Color.BLACK);
                        } else if (shapeColor.equals("12")){
                            diamondView.paint.setColor(Color.CYAN);
                        }

                        RelativeLayout.LayoutParams params = new RelativeLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);
                        params.addRule(RelativeLayout.ALIGN_PARENT_LEFT, RelativeLayout.TRUE);
                        params.topMargin = (int) event.getY();
                        params.leftMargin = (int) event.getX();
                        rl.addView(diamondView, params);

                        diamondView.invalidate();
                    }  else if (viewType.equals("5")) {

                        RelativeLayout rl = (RelativeLayout) findViewById(R.id.mainLayout);

                        ShapesActivity.HexagonView hexagonView = new HexagonView(ShapesActivity.this);
                        hexagonView.setBackgroundColor(Color.TRANSPARENT);
                        list.add(hexagonView);

                        if (shapeColor.equals("7")){
                            hexagonView.paint.setColor(Color.RED);
                        } else if (shapeColor.equals("8")){
                            hexagonView.paint.setColor(Color.BLUE);
                        } else if (shapeColor.equals("9")){
                            hexagonView.paint.setColor(Color.GREEN);
                        } else if (shapeColor.equals("10")){
                            hexagonView.paint.setColor(Color.YELLOW);
                        } else if (shapeColor.equals("11")){
                            hexagonView.paint.setColor(Color.BLACK);
                        } else if (shapeColor.equals("12")){
                            hexagonView.paint.setColor(Color.CYAN);
                        }

                        RelativeLayout.LayoutParams params = new RelativeLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);
                        params.addRule(RelativeLayout.ALIGN_PARENT_LEFT, RelativeLayout.TRUE);
                        params.topMargin = (int) event.getY();
                        params.leftMargin = (int) event.getX();
                        rl.addView(hexagonView, params);

                        hexagonView.invalidate();

                    } else if (viewType.equals("6")) {

                        RelativeLayout rl = (RelativeLayout) findViewById(R.id.mainLayout);

                        ShapesActivity.TrapeziumView trapeziumView = new TrapeziumView(ShapesActivity.this);
                        trapeziumView.setBackgroundColor(Color.TRANSPARENT);
                        list.add(trapeziumView);

                        if (shapeColor.equals("7")){
                            trapeziumView.paint.setColor(Color.RED);
                        } else if (shapeColor.equals("8")){
                            trapeziumView.paint.setColor(Color.BLUE);
                        } else if (shapeColor.equals("9")){
                            trapeziumView.paint.setColor(Color.GREEN);
                        } else if (shapeColor.equals("10")){
                            trapeziumView.paint.setColor(Color.YELLOW);
                        } else if (shapeColor.equals("11")){
                            trapeziumView.paint.setColor(Color.BLACK);
                        } else if (shapeColor.equals("12")){
                            trapeziumView.paint.setColor(Color.CYAN);
                        }

                        RelativeLayout.LayoutParams params = new RelativeLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);
                        params.addRule(RelativeLayout.ALIGN_PARENT_LEFT, RelativeLayout.TRUE);
                        params.topMargin = (int) event.getY();
                        params.leftMargin = (int) event.getX();
                        rl.addView(trapeziumView, params);

                        trapeziumView.invalidate();

                    }
                }

                return true;
            }
        });


    }

    public PopupWindow popupWindowShapes() {
        PopupWindow popupWindow = new PopupWindow(this);
        ListView listViewShapes = new ListView(this);
        listViewShapes.setAdapter(shapesAdapter(popUpContents));
        listViewShapes.setOnItemClickListener(new ShapesDropDownOnItemClickListener());
        popupWindow.setFocusable(true);
        popupWindow.setWidth(250);
        popupWindow.setHeight(WindowManager.LayoutParams.WRAP_CONTENT);
        popupWindow.setContentView(listViewShapes);
        return popupWindow;
    }

    public PopupWindow popupWindowColor() {
        PopupWindow popupWindow = new PopupWindow(this);
        ListView listViewColor = new ListView(this);
        listViewColor.setAdapter(shapesAdapter(popUpContents2));
        listViewColor.setOnItemClickListener(new ColorDropDownOnItemClickListener());
        popupWindow.setFocusable(true);
        popupWindow.setWidth(250);
        popupWindow.setHeight(WindowManager.LayoutParams.WRAP_CONTENT);
        popupWindow.setContentView(listViewColor);
        return popupWindow;
    }
    

    private ArrayAdapter<String> shapesAdapter(String shapesArray[]) {

        ArrayAdapter<String> adapter = new ArrayAdapter<String>(this, android.R.layout.simple_list_item_1, shapesArray) {

            @Override
            public View getView(int position, View convertView, ViewGroup parent) {


                String item = getItem(position);
                String[] itemArr = item.split("::");
                String text = itemArr[0];
                String id = itemArr[1];

                TextView listItem = new TextView(ShapesActivity.this);

                listItem.setText(text);
                listItem.setTag(id);
                listItem.setTextSize(22);
                listItem.setPadding(10, 10, 10, 10);
                listItem.setTextColor(Color.WHITE);

                return listItem;
            }
        };

        return adapter;
    }


    public void setShapeType(String type) {
        viewType = type;
    }

    public void setShapeColor(String c) {
        shapeColor = c;
    }

    public void clearShapes() {
        RelativeLayout rl = (RelativeLayout) findViewById(R.id.mainLayout);

        for (Iterator<View> iterator = list.iterator(); iterator.hasNext(); ){
            View view = iterator.next();
            rl.removeView(view);
        }
        list.clear();
    }






    public static class SquareView extends View {

        private Rect rectangle;
        private Paint paint;

        public SquareView(Context context) {
            super(context);
            int x = 0;
            int y = 0;
            int sideLength = 50;

            rectangle = new Rect(x,y, sideLength, sideLength);

            paint = new Paint();
            paint.setColor(Color.GRAY);
        }

        @Override
        protected void onDraw(Canvas canvas) {

            canvas.drawRect(rectangle, paint);

        }

    }

    public static class RectangleView extends View {


        private Rect rectangle;
        public Paint paint;
        private android.graphics.Color color;

        public RectangleView(Context context) {
            super(context);

            paint = new Paint();
            paint.setColor(Color.GRAY);
        }


        @Override
        protected void onDraw(Canvas canvas) {
            //canvas.drawColor(Color.BLUE);
            //canvas.drawRect(rectangle, paint);

            Path rectangle = new Path();
            rectangle.reset();
            rectangle.moveTo(0, 0);
            rectangle.lineTo(100, 0);
            rectangle.lineTo(100, 50);
            rectangle.lineTo(0,50);
            rectangle.close();
            canvas.drawPath(rectangle, paint);
        }


    }

        public static class TriangleView extends View {

            private Paint paint;

            public TriangleView(Context context) {
                super(context);

                paint = new Paint();
                paint.setColor(Color.GRAY);
            }

            @Override
            protected void onDraw(Canvas canvas) {

                Path triangle = new Path();
                triangle.reset();
                triangle.moveTo(0, 0);
                triangle.lineTo(0, 50);
                triangle.lineTo(50, 0);
                triangle.close();
                canvas.drawPath(triangle, paint);

            }

        }

    public static class DiamondView extends View {

        private Paint paint;

        public DiamondView(Context context) {
            super(context);

            paint = new Paint();
            paint.setColor(Color.GRAY);
        }

    @Override
    protected void onDraw(Canvas canvas) {

        Path diamond = new Path();
        diamond.reset();
        diamond.moveTo(50, 0);
        diamond.lineTo(100, 50);
        diamond.lineTo(50, 100);
        diamond.lineTo(0,50);
        diamond.close();
        canvas.drawPath(diamond, paint);

    }

}

    public static class HexagonView extends View {

        private Paint paint;

        public HexagonView(Context context) {
            super(context);

            paint = new Paint();
            paint.setColor(Color.GRAY);
        }

        @Override
        protected void onDraw(Canvas canvas) {

            canvas.drawCircle(25,25,20,paint);

        }

    }

    public static class TrapeziumView extends View {

        private Paint paint;

        public TrapeziumView(Context context) {
            super(context);

            paint = new Paint();
            paint.setColor(Color.GRAY);
        }

        @Override
        protected void onDraw(Canvas canvas) {

            Path trapezium = new Path();
            trapezium.reset();
            trapezium.moveTo(25, 0);
            trapezium.lineTo(75, 0);
            trapezium.lineTo(100, 50);
            trapezium.lineTo(0, 100);
            canvas.drawPath(trapezium, paint);

        }

    }
























        public class MainActivity extends Activity {

            @Override
            protected void onCreate(Bundle savedInstanceState) {
                super.onCreate(savedInstanceState);
                //setContentView(new CustomView(this));
            }

        }
    }



















